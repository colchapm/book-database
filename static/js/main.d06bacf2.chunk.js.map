{"version":3,"sources":["img/bookboxcover.png","components/Header.js","components/BookSearchForm.js","components/SearchResultList.js","components/BookControl.js","components/SavedList.js","components/DoneReadList.js","components/SignUp.js","components/SignIn.js","components/SignOut.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","Fragment","className","src","coverPhoto","alt","BookSearchForm","props","onSubmit","event","preventDefault","searchTitle","target","title","value","onTitleSearch","type","name","placeholder","SearchResultList","searchResultList","map","bookData","index","key","volumeInfo","authors","categories","undefined","averageRating","style","display","href","infoLink","rel","imageLinks","thumbnail","onClick","book","onSavingBook","onMarkingBookAsRead","console","log","id","BookControl","makeGoogleApiCall","fetch","process","then","response","json","jsonifiedResponse","setState","isApiLoaded","items","catch","error","handleSearch","state","this","results","onClickSaved","onClickRead","React","Component","SavedList","handleRemovingBook","onClickRemoveBookFromSaved","savedBooks","DoneReadList","completedBooks","onClickRemoveBookFromCompleted","SignUp","history","useHistory","form","currentTarget","password","password2","auth","getAuth","createUserWithEmailAndPassword","email","userCredential","push","alert","SignIn","signInWithEmailAndPassword","user","onSuccess","to","useEffect","signOut","App","firestore","getFirestore","useFirebaseApp","useState","setSavedBooks","setCompletedBooks","userId","setUserId","saveToSavedDb","books","setDoc","doc","err","saveToCompletedDb","handleClickRead","newCompletedBooksCollection","concat","links","sdk","path","SignOut","uid","getDoc","resource","exists","data","getSavedBooksFromDb","getCompletedBooksFromDb","newSavedBooksCollection","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d06bacf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookboxcover.068cb611.png\";","import React from 'react';\nimport coverPhoto from \"./../img/bookboxcover.png\"\n\nfunction Header(){\n  return (\n    <React.Fragment>\n      <div className=\"header_page\">\n        <img className=\"photo\" src={coverPhoto} alt=\"book covers\" />\n        <p className=\"header_subtext1\">track books you've read.</p>\n        <p className=\"header_subtext2\">save those you want to read.</p>\n      </div>\n\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction BookSearchForm(props) {\n\n  function submitSearch(event) {\n    event.preventDefault();\n    const searchTitle = event.target.title.value;\n    props.onTitleSearch(searchTitle);\n  }\n  return (\n    <React.Fragment>\n      <div className=\"border\">\n        <form onSubmit={submitSearch}>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"enter book title\" />\n            <button className=\"button\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\nexport default BookSearchForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction SearchResultList(props){\n\n  function handleSavingBook(book) {\n    props.onSavingBook(book);\n  }\n\n  function handleMarkingRead(book){\n    props.onMarkingBookAsRead(book);\n  }\n\n  return (\n    <React.Fragment>\n      <hr />\n      <h3 className=\"header_subtext\">Search Results</h3>\n      <ul>\n        {props.searchResultList.map((bookData, index) =>\n          <li className=\"search_li_no_bullets\" key={index}>\n            <p className=\"search_book_title_text\">{bookData.volumeInfo.title}</p>\n            <p className=\"search_book_author_text\">Author(s): {bookData.volumeInfo.authors}</p>\n            <p className=\"search_book_author_text\">Genre: {bookData.volumeInfo.categories}</p>\n            <p className=\"search_book_author_text\">Average Rating: {bookData.volumeInfo.averageRating === undefined\n              ? \"No Ratings Available\"\n              : bookData.volumeInfo.averageRating} </p>\n            <a style={{display: \"table-cell\"}} href={bookData.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\"> <img src={bookData.volumeInfo.imageLinks === undefined\n              ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXhzNKj_YNwD8fENvC1wGMxq6_zUxI1FmLvQ&usqp=CAU\"\n              : bookData.volumeInfo.imageLinks.thumbnail} alt=\"book cover thumbnail\"/> </a>\n\n\n            <button className=\"book_button\" onClick= { () => handleSavingBook(bookData) }>Add To Readlist</button>\n            <button className=\"book_button\" onClick= { () => handleMarkingRead(bookData) }>Mark As Read</button>\n            { console.log(bookData.id) }\n          </li>\n        )}\n      </ul>\n    </React.Fragment>\n  );\n}\n\n\n\n  SearchResultList.propTypes = {\n    searchResultList: PropTypes.array,\n    onSavingBook: PropTypes.func,\n    onMarkingBookAsRead: PropTypes.func\n  }\n\nexport default SearchResultList;","import React from 'react';\nimport BookSearchForm from './BookSearchForm';\nimport SearchResultList from './SearchResultList';\n\nclass BookControl extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        error: null,\n        isApiLoaded: false,\n        bookData: [],\n        // savedBooks: [],\n        title: null\n      }\n  }\n\n\n  makeGoogleApiCall = (title) => {\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${process.env.REACT_APP_GOOGLE_BOOKS_API_KEY}`)\n    .then(response => response.json())\n      .then(\n        (jsonifiedResponse) => {\n          this.setState({\n            isApiLoaded: true,\n            bookData: jsonifiedResponse.items\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            isApiLoaded: true,\n            error\n          });\n        })\n  }\n\n  handleSearch = (title) => {\n    this.setState({ title });\n    this.makeGoogleApiCall(title);\n  }\n\n\n  render() {\n    console.log(this.state)\n    const { isApiLoaded, title } = this.state;\n    let results = null;\n\n    if (title!= null && isApiLoaded) {\n      results = <SearchResultList searchResultList={this.state.bookData}\n                                  onSavingBook = {this.props.onClickSaved}\n                                  onMarkingBookAsRead={this.props.onClickRead}/>\n    }\n    return (\n      <React.Fragment>\n        <BookSearchForm onTitleSearch={this.handleSearch} />\n        {results}\n      </React.Fragment>\n    )\n  }  \n}\n\nexport default BookControl","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SavedList(props) {\n\n  function handleMarkingRead(book) {\n    props.onClickRead(book);\n  }\n\n  function handleRemovingBook(book) {\n    props.onClickRemoveBookFromSaved(book);\n  }\n\n\n  return (\n    <>\n    <hr />\n    <p className=\"header_subtext\">Saved Books</p> \n      <ul className=\"container\">\n        {props.savedBooks.map((bookData, index) =>\n          <li className=\"li_no_bullets\" key={index}>\n            <p className=\"book_title_text\">{bookData.volumeInfo.title}</p>\n            <p className=\"book_author_text\">Author(s): {bookData.volumeInfo.authors}</p>\n            {/* <p>Genre: {bookData.volumeInfo.categories}</p> */}\n            {/* <p>Average Rating: {bookData.volumeInfo.averageRating === undefined\n              ? \"No Ratings Available\"\n              : bookData.volumeInfo.averageRating} </p> */}\n          \n            <div className=\"thumbnail\">\n              <a style={{display: \"table-cell\"}} href={bookData.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\"> <img src={bookData.volumeInfo.imageLinks === undefined\n              ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXhzNKj_YNwD8fENvC1wGMxq6_zUxI1FmLvQ&usqp=CAU\"\n              : bookData.volumeInfo.imageLinks.thumbnail} alt=\"book cover thumbnail\"/> </a>\n            </div>\n\n            <div className=\"thumbnail\">\n              <button className=\"book_button\" onClick= { () => { handleMarkingRead(bookData); handleRemovingBook(bookData.volumeInfo.title); }}>Mark As Read</button>\n              <button className=\"book_button\" onClick= { () => handleRemovingBook(bookData.volumeInfo.title) }>Remove</button>\n            </div>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n}\n\nSavedList.propTypes = {\n  onClickRead: PropTypes.func,\n  onClickRemoveBookFromSaved: PropTypes.func\n}\n\nexport default SavedList;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction DoneReadList(props) {\n\n  function handleRemovingBook(book) {\n    props.onClickRemoveBookFromCompleted(book);\n  }\n\n  return (\n    <>\n    <hr />\n    <p className=\"header_subtext\">Read History</p>\n      <ul className=\"container\">\n        {props.completedBooks.map((bookData, index) =>\n          <li className=\"li_no_bullets\" key={index}>\n            <p className=\"book_title_text\">{bookData.volumeInfo.title}</p>\n            <p className=\"book_author_text\">Author(s): {bookData.volumeInfo.authors}</p>\n            {/* <p>Year Read</p> */}\n\n            <div className=\"thumbnail\">\n              <a style={{display: \"table-cell\"}} href={bookData.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\"> <img src={bookData.volumeInfo.imageLinks === undefined\n                ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXhzNKj_YNwD8fENvC1wGMxq6_zUxI1FmLvQ&usqp=CAU\"\n                : bookData.volumeInfo.imageLinks.thumbnail} alt=\"book cover thumbnail\"/> </a>\n              </div>\n\n            <div className=\"thumbnail\">\n              <button className=\"book_button\" onClick= { () => handleRemovingBook(bookData.volumeInfo.title) }>Remove</button>\n            </div>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n}\n\nDoneReadList.propTypes = {\n  onClickRemoveBookFromCompleted: PropTypes.func,\n}\n\nexport default DoneReadList;\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n\nfunction SignUp(props) {\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.password.value === form.password2.value) {\n      const auth = getAuth();\n\n      createUserWithEmailAndPassword(auth, form.email.value, form.password.value)\n        .then((userCredential) => {\n          // Signed in \n          // const user = userCredential.user;\n          console.log(userCredential);\n          history.push('/');\n        })\n        .catch((error) => {\n          // const errorCode = error.code;\n          // const errorMessage = error.message;\n          console.log(error);\n        });\n    } else {\n      alert(\"Passwords don't match\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>Email: <input name='email' type='text' /></div>\n      <div>Password: <input name='password' type='password' /></div>\n      <div>Confirm Password: <input name='password2' type='password' /></div>\n      <button type='submit'>Sign Up</button>\n    </form>\n  );\n}\n\nexport default SignUp;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nfunction SignIn(props) {\n  const history = useHistory();\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, form.email.value, form.password.value)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        props.onSuccess(user);\n        history.push('/');\n      })\n      .catch((error) => {\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        console.log(error);\n      });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>Email: <input name='email' type='text' /></div>\n      <div>Password: <input name='password' type='password' /></div>\n      <button className=\"button\">Sign In</button>\n      <div className=\"top_link1\"><Link to='/signin'>Sign In</Link></div>\n      <div className=\"top_link2\"><Link to='/signup'>Create Account</Link></div>\n    </form>\n  );\n}\n\nexport default SignIn;","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAuth, signOut } from \"firebase/auth\";\n\nfunction SignIn(props) {\n  const history = useHistory();\n  \n  useEffect(() => {\n    const auth = getAuth();\n    signOut(auth).then(() => {\n      console.log('logout')\n      props.onSuccess();\n      history.push('/login');\n    }).catch((error) => {\n      // An error happened.\n      console.log(error);\n    });\n  })\n\n  return null;\n}\n\nexport default SignIn;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport BookControl from \"./BookControl\";\nimport SavedList from \"./SavedList\";\nimport DoneReadList from \"./DoneReadList\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport 'firebase/firestore';\nimport { FirestoreProvider, useFirebaseApp } from 'reactfire';\nimport { doc, getFirestore, setDoc, getDoc } from 'firebase/firestore';\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport SignOut from \"./SignOut\";\n\n\nfunction App() {\n\n  const firestore = getFirestore(useFirebaseApp());\n\n  const [savedBooks, setSavedBooks] = useState([]);\n  //useState is a hook that declares savedBooks as our state variable\n  //useState has an argument of our initial state, in this case it is a blank array\n  //useState takes the initial value of savedBooks. equivalent to state constructor in class component\n  //setSavedBooks is a function that updates our current state (savedBooks). equivalent to setState that gets used in class component\n  //App component will re-render whenever setSavedBooks is called\n\n  const [completedBooks, setCompletedBooks] = useState([]);\n  const [userId, setUserId] = useState(null);\n\n  function saveToSavedDb(userId, books) {\n    setDoc(doc(firestore, \"savedbooks\", userId), { savedBooks: books})\n      .then(() => console.log(\"success\"))\n      .catch((err) => console.error(err));\n    \n  }\n\n  function saveToCompletedDb(userId, books) {\n    setDoc(doc(firestore, \"completedbooks\", userId), { completedBooks: books})\n      .then(() => console.log(\"success\"))\n      .catch((err) => console.error(err));\n  }\n\n  const getSavedBooksFromDb = (userId) => {\n    getDoc(doc(firestore, \"savedbooks\", userId))\n      .then((resource) => {\n        if (resource.exists()) {\n          setSavedBooks(resource.data().savedBooks);\n        }\n      })\n      .catch((error) => console.error(error));\n  }\n\n  const getCompletedBooksFromDb = (userId) => {\n    getDoc(doc(firestore, \"completedbooks\", userId))\n      .then((resource) => {\n        if (resource.exists()) {\n          setCompletedBooks(resource.data().completedBooks);\n        }\n      })\n      .catch((error) => console.error(error));\n  }\n\n  const handleClickSaved = (book) => {\n    const newSavedBooksCollection = savedBooks.concat(book);\n    setSavedBooks(newSavedBooksCollection);\n    saveToSavedDb(userId, newSavedBooksCollection);\n  }\n\n  const handleClickRead = (book) => {\n    const newCompletedBooksCollection = completedBooks.concat(book);\n    setCompletedBooks(newCompletedBooksCollection);\n    saveToCompletedDb(userId, newCompletedBooksCollection);\n  }\n\n  const handleRemoveBookFromSaved = (title) => {\n    const newSavedBooksCollection = savedBooks.filter(book => book.volumeInfo.title !== title);\n    setSavedBooks(newSavedBooksCollection);\n    saveToSavedDb(userId, newSavedBooksCollection);\n  }\n\n  const handleRemoveBookFromCompleted = (title) => {\n    const newCompletedBooksCollection = completedBooks.filter(book => book.volumeInfo.title !== title);\n    setCompletedBooks(newCompletedBooksCollection);\n    saveToCompletedDb(userId, newCompletedBooksCollection);\n  }\n\n  const handleLoginSuccess = (user) => {\n    console.log(user);\n    setUserId(user.uid);\n    getSavedBooksFromDb(user.uid);\n    getCompletedBooksFromDb(user.uid);\n  }\n\n  const handleLogOutSuccess = (user) => {\n    console.log(user);\n    setUserId(null);\n    setSavedBooks([]);\n    setCompletedBooks([]);\n  }\n\n\n  const links = userId === null ?\n    <Link to=\"/\">Search</Link> :\n    <>\n      <Link to=\"/\">Search</Link> | <Link to=\"/saved\">Saved</Link> | <Link to=\"/history\">History</Link> <Link className=\"sign_out\" to=\"/signout\">Sign Out</Link>\n    </>\n\n  return (\n    <FirestoreProvider sdk={firestore}>\n      <Router>\n        {links} \n        <Header />\n        <div>\n          <Switch>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/signout\">\n              <SignOut onSuccess={handleLogOutSuccess} />\n            </Route>\n            <Route path=\"/signin\">\n              <SignIn onSuccess={handleLoginSuccess} />\n            </Route>\n            <Route path=\"/saved\">\n              <SavedList savedBooks={savedBooks}\n                          onClickRead={handleClickRead} \n                          onClickRemoveBookFromSaved={handleRemoveBookFromSaved}/>\n            </Route>\n            <Route path=\"/history\">\n              <DoneReadList completedBooks={completedBooks}\n                            onClickRemoveBookFromCompleted={handleRemoveBookFromCompleted} />\n            </Route>\n            <Route path=\"/\">\n              { userId === null ? \n                <Redirect to=\"/signin\" /> :\n                  <BookControl onClickSaved={handleClickSaved}\n                  onClickRead={handleClickRead}/>\n              }\n            </Route>\n          </Switch>\n        </div>\n        </Router>\n    </FirestoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { FirebaseAppProvider } from 'reactfire';\n\n\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID \n}\n\n\nReactDOM.render(\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <App />\n    </FirebaseAppProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}